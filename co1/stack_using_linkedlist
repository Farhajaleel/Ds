#include<stdio.h>
#include<stdlib.h>
struct node
{
int data;
struct node *next;
};
struct node *push(struct node *top)
{
struct node *temp;
int val;
printf("\n enter a value");
scanf("%d"&val);
temp=(struct node *)malloc(sizeof(struct node));
temp->data=val;
if(top==NULL)
temp->next=NULL;
else
temp->next=top;
top=temp;
printf("\none value inserted in to the stack \n");
return top;
}
struct node *pop(struct node *top)
{
(top==NULL)
printf("\nSTACK UNDERFLOW\n");
else
{
struct node *temp=top;
printf("\n deleted elements:%d",temp<-data);
top=temp->next;
free(next);
}
return top;
}
void display(struct node *top)
{
if(top==NULL)
printf("\n STACK IS EMPTY \n");
else
{
struct node *temp=top;
while(temp->next!=NULL)
{
printf("%d--->",temp->data);
temp=temp->next;
}
printf("%d--->NULL",temp->data);
}
}
void main ()
{
int ch;
int e=1;
struct node *top=NULL;
printf("\n stack using linked list");
while(e)
{
printf("\n-----------MENU-----------\n");
printf("\n\t1.push\n\t2.pop\n\t3.display\n\t4.exit\n");
printf("\n-----------------\n");
printf("enter your choice");
switch(ch)
{
case 1:top=push(top);
       break;
case 2:top=pop(top);
       break;
case 1:top=display(top);
       break;
case 4:e=0;
printf("\n exiting from the program\n");
        break;
defualt:printf("\n please enter valid choice");
}
}
}
